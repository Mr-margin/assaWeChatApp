server.port=8888
server.context-path=/assaWeChatApp

# \u5B58\u653ETomcat\u7684\u65E5\u5FD7\u3001Dump\u7B49\u6587\u4EF6\u7684\u4E34\u65F6\u6587\u4EF6\u5939\uFF0C\u9ED8\u8BA4\u4E3A\u7CFB\u7EDF\u7684tmp\u6587\u4EF6\u5939\uFF08\u5982\uFF1AC:\\Users\\Shanhy\\AppData\\Local\\Temp\uFF09
#server.tomcat.basedir=E:/springboot-tomcat-tmp
# \u65E5\u5FD7\u6587\u4EF6\u76EE\u5F55
#logging.path=E:/springboot-tomcat-tmp

multipart.maxFileSize=3M
multipart.maxRequestSize=10M

spring.datasource.type=com.alibaba.druid.pool.DruidDataSource

#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#spring.datasource.url=jdbc:mysql://localhost:3306/b_assa?useUnicode=yes&characterEncoding=UTF8
#spring.datasource.username=root
#spring.datasource.password=root

spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
spring.datasource.url=jdbc:oracle:thin:@192.168.1.202:1521:orcl
spring.datasource.username=b_assa
spring.datasource.password=orcl

#spring.datasource.url=jdbc:oracle:thin:@localhost:1521:assa
#spring.datasource.username=b_assa
#spring.datasource.password=GIStone606_613


# \u6307\u5B9A\u8FDE\u63A5\u88AB\u521B\u5EFA\uFF0C\u518D\u88AB\u6DFB\u52A0\u5230\u8FDE\u63A5\u6C60\u4E4B\u524D\u6267\u884C\u7684sql.
spring.datasource.connection-init-sql=SELECT 1 FROM DUAL
# \u6307\u5B9A\u6821\u9A8C\u8FDE\u63A5\u5408\u6CD5\u6027\u6267\u884C\u7684sql\u8BED\u53E5
spring.datasource.connection-test-query=SELECT 1 FROM DUAL
# \u6307\u5B9A\u8FDE\u63A5\u7684\u8D85\u65F6\u65F6\u95F4\uFF0C\u6BEB\u79D2\u5355\u4F4D.
spring.datasource.connection-timeout=60000
# \u662F\u5426\u81EA\u52A8\u63D0\u4EA4.
spring.datasource.default-auto-commit=true
# \u6307\u5B9A\u8FDE\u63A5\u591A\u4E45\u6CA1\u88AB\u4F7F\u7528\u65F6\uFF0C\u88AB\u8BBE\u7F6E\u4E3A\u7A7A\u95F2\uFF0C\u9ED8\u8BA4\u4E3A10ms
# spring.datasource.idle-timeout
# \u6307\u5B9A\u542F\u52A8\u8FDE\u63A5\u6C60\u65F6\uFF0C\u521D\u59CB\u5EFA\u7ACB\u7684\u8FDE\u63A5\u6570\u91CF
spring.datasource.initial-size=5
# \u6307\u5B9A\u8FDE\u63A5\u6570\u636E\u5E93\u7684\u8D85\u65F6\u65F6\u95F4
spring.datasource.login-timeout=60000
# \u6307\u5B9A\u8FDE\u63A5\u6C60\u4E2D\u6700\u5927\u7684\u6D3B\u8DC3\u8FDE\u63A5\u6570.
spring.datasource.max-active=40
# \u6307\u5B9A\u8FDE\u63A5\u6C60\u6700\u5927\u7684\u7A7A\u95F2\u8FDE\u63A5\u6570\u91CF.
#spring.datasource.max-idle=10
#\u6307\u5B9A\u8FDE\u63A5\u6C60\u4E2D\u8FDE\u63A5\u7684\u6700\u5927\u751F\u5B58\u65F6\u95F4\uFF0C\u6BEB\u79D2\u5355\u4F4D
spring.datasource.max-lifetime=600000
# \u6307\u5B9A\u8FDE\u63A5\u6C60\u7B49\u5F85\u8FDE\u63A5\u8FD4\u56DE\u7684\u6700\u5927\u7B49\u5F85\u65F6\u95F4\uFF0C\u6BEB\u79D2\u5355\u4F4D.
spring.datasource.max-wait=60000
# \u6307\u5B9A\u8FDE\u63A5\u6C60\u6700\u5927\u7684\u8FDE\u63A5\u6570\uFF0C\u5305\u62EC\u4F7F\u7528\u4E2D\u7684\u548C\u7A7A\u95F2\u7684\u8FDE\u63A5.
spring.datasource.maximum-pool-size=50
# \u6307\u5B9A\u4E00\u4E2A\u7A7A\u95F2\u8FDE\u63A5\u6700\u5C11\u7A7A\u95F2\u591A\u4E45\u540E\u53EF\u88AB\u6E05\u9664
spring.datasource.min-evictable-idle-time-millis=300000
# \u6307\u5B9A\u5FC5\u987B\u4FDD\u6301\u8FDE\u63A5\u7684\u6700\u5C0F\u503C(For DBCP and Tomcat connection pools)
spring.datasource.min-idle=10
# \u6307\u5B9A\u591A\u5C11ms\u6267\u884C\u4E00\u6B21\u8FDE\u63A5\u6821\u9A8C
spring.datasource.validation-interval=100000
# \u6307\u5B9A\u83B7\u53D6\u8FDE\u63A5\u65F6\u8FDE\u63A5\u6821\u9A8C\u7684sql\u67E5\u8BE2\u8BED\u53E5
spring.datasource.validation-query=SELECT 1 FROM DUAL
# \u5F53\u8FDE\u63A5\u7A7A\u95F2\u65F6\uFF0C\u662F\u5426\u6267\u884C\u8FDE\u63A5\u6D4B\u8BD5
spring.datasource.test-while-idle=true
# \u6307\u5B9A\u7A7A\u95F2\u8FDE\u63A5\u68C0\u67E5\u3001\u5E9F\u5F03\u8FDE\u63A5\u6E05\u7406\u3001\u7A7A\u95F2\u8FDE\u63A5\u6C60\u5927\u5C0F\u8C03\u6574\u4E4B\u95F4\u7684\u64CD\u4F5C\u65F6\u95F4\u95F4\u9694
spring.datasource.time-between-eviction-runs-millis=60000
# \u5728\u8FDE\u63A5\u5F52\u8FD8\u5230\u8FDE\u63A5\u6C60\u65F6\u662F\u5426\u6D4B\u8BD5\u8BE5\u8FDE\u63A5
spring.datasource.test-on-return=false
# \u5F53\u4ECE\u8FDE\u63A5\u6C60\u501F\u7528\u8FDE\u63A5\u65F6\uFF0C\u662F\u5426\u6D4B\u8BD5\u8BE5\u8FDE\u63A5.
spring.datasource.test-on-borrow=false
spring.jpa.show-sql=true

# \u4E0B\u9762\u4E3A\u8FDE\u63A5\u6C60\u7684\u8865\u5145\u8BBE\u7F6E\uFF0C\u5E94\u7528\u5230\u4E0A\u9762\u6240\u6709\u6570\u636E\u6E90\u4E2D
# \u521D\u59CB\u5316\u5927\u5C0F\uFF0C\u6700\u5C0F\uFF0C\u6700\u5927
#spring.datasource.initialSize=5
#spring.datasource.minIdle=5
#spring.datasource.maxActive=20
# \u914D\u7F6E\u83B7\u53D6\u8FDE\u63A5\u7B49\u5F85\u8D85\u65F6\u7684\u65F6\u95F4
#spring.datasource.maxWait=60000
# \u914D\u7F6E\u95F4\u9694\u591A\u4E45\u624D\u8FDB\u884C\u4E00\u6B21\u68C0\u6D4B\uFF0C\u68C0\u6D4B\u9700\u8981\u5173\u95ED\u7684\u7A7A\u95F2\u8FDE\u63A5\uFF0C\u5355\u4F4D\u662F\u6BEB\u79D2 
#spring.datasource.timeBetweenEvictionRunsMillis=60000
# \u914D\u7F6E\u4E00\u4E2A\u8FDE\u63A5\u5728\u6C60\u4E2D\u6700\u5C0F\u751F\u5B58\u7684\u65F6\u95F4\uFF0C\u5355\u4F4D\u662F\u6BEB\u79D2 
#spring.datasource.minEvictableIdleTimeMillis=300000
#spring.datasource.validationQuery=SELECT 1 FROM DUAL
#spring.datasource.testWhileIdle=true
#spring.datasource.testOnBorrow=false
#spring.datasource.testOnReturn=false

#spring.datasource.type=com.zaxxer.hikari.HikariDataSource
#spring.datasource.minimum-idle=5
#spring.datasource.maximum-pool-size=30
#spring.datasource.min-evictable-idle-time-millis=60000